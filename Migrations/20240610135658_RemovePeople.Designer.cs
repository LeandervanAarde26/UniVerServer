// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UniVerServer;

#nullable disable

namespace UniVerServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240610135658_RemovePeople")]
    partial class RemovePeople
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UniVerServer.Models.CourseEnrollments", b =>
                {
                    b.Property<int>("enrollment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("enrollment_id"));

                    b.Property<int>("Subjects")
                        .HasColumnType("integer");

                    b.Property<string>("student_id")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("enrollment_id");

                    b.ToTable("course_enrollments");
                });

            modelBuilder.Entity("UniVerServer.Models.Events", b =>
                {
                    b.Property<int>("event_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("event_id"));

                    b.Property<DateTime>("event_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("event_description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("event_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("staff_organiser")
                        .HasColumnType("integer");

                    b.HasKey("event_id");

                    b.ToTable("events");
                });

            modelBuilder.Entity("UniVerServer.Models.MadePayments", b =>
                {
                    b.Property<int>("payment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("payment_id"));

                    b.Property<decimal>("payment_amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("payment_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("person_id")
                        .HasColumnType("integer");

                    b.HasKey("payment_id");

                    b.ToTable("student_payments");
                });

            modelBuilder.Entity("UniVerServer.Models.OutStandingStudentFees", b =>
                {
                    b.Property<int>("fee_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("fee_id"));

                    b.Property<int>("outstanding_amount")
                        .HasColumnType("integer");

                    b.Property<Guid>("person_system_identifier")
                        .HasColumnType("uuid");

                    b.HasKey("fee_id");

                    b.HasIndex("person_system_identifier");

                    b.ToTable("outstanding_student_fees");
                });

            modelBuilder.Entity("UniVerServer.Models.PaymentSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AmountToBePaid")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PaymentSummary");
                });

            modelBuilder.Entity("UniVerServer.Models.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("CanAccess")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("HourlyRate")
                        .HasColumnType("numeric");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<bool>("PaidRole")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("people_roles");
                });

            modelBuilder.Entity("UniVerServer.Models.StudentCourses", b =>
                {
                    b.Property<string>("grade_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<Guid>("facilitator_id")
                        .HasColumnType("uuid");

                    b.Property<int>("grade")
                        .HasColumnType("integer");

                    b.Property<Guid>("student_id")
                        .HasColumnType("uuid");

                    b.Property<int>("subject_id")
                        .HasColumnType("integer");

                    b.HasKey("grade_id");

                    b.HasIndex("facilitator_id");

                    b.HasIndex("student_id");

                    b.HasIndex("subject_id");

                    b.ToTable("student_grades");
                });

            modelBuilder.Entity("UniVerServer.Models.Subjects", b =>
                {
                    b.Property<int>("subject_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("subject_id"));

                    b.Property<DateTime>("course_start")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("is_active")
                        .HasColumnType("boolean");

                    b.Property<int>("lecturer_id")
                        .HasColumnType("integer");

                    b.Property<string>("subjectImage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("subject_class_amount")
                        .HasColumnType("integer");

                    b.Property<int>("subject_class_runtiem")
                        .HasColumnType("integer");

                    b.Property<string>("subject_code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("subject_color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("subject_cost")
                        .HasColumnType("integer");

                    b.Property<int>("subject_credits")
                        .HasColumnType("integer");

                    b.Property<string>("subject_description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("subject_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("subject_id");

                    b.ToTable("subjects");
                });

            modelBuilder.Entity("UniVerServer.Users.Models.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Credits")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstNames")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IssuedEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastNames")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("PasswordModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PersonalEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProfileImage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RequiredCredits")
                        .HasColumnType("integer");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("people");
                });

            modelBuilder.Entity("UniVerServer.Models.OutStandingStudentFees", b =>
                {
                    b.HasOne("UniVerServer.Users.Models.Users", "student_id")
                        .WithMany()
                        .HasForeignKey("person_system_identifier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("student_id");
                });

            modelBuilder.Entity("UniVerServer.Models.StudentCourses", b =>
                {
                    b.HasOne("UniVerServer.Users.Models.Users", "facilitator")
                        .WithMany()
                        .HasForeignKey("facilitator_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniVerServer.Users.Models.Users", "student")
                        .WithMany()
                        .HasForeignKey("student_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniVerServer.Models.Subjects", "subject")
                        .WithMany()
                        .HasForeignKey("subject_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("facilitator");

                    b.Navigation("student");

                    b.Navigation("subject");
                });

            modelBuilder.Entity("UniVerServer.Users.Models.Users", b =>
                {
                    b.HasOne("UniVerServer.Models.Roles", "role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("role");
                });
#pragma warning restore 612, 618
        }
    }
}
